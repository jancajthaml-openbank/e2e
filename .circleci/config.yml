version: 2.1

# ---------------------------------------------------------------------------- #

workflows:

  version: 2

  commit:
    jobs:
      - performance-test
      - blackbox-test-amd64
      - report:
          requires:
            - performance-test

  rolling_contract:
    triggers:
      - schedule:
          cron: "10,50 * * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - blackbox-test-amd64

  rolling_performance:
    triggers:
      - schedule:
          cron: "30 * * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - performance-test
      - report:
          requires:
            - performance-test

# ---------------------------------------------------------------------------- #

executors:

  machine:
    machine:
      image: circleci/classic:201808-01
      docker_layer_caching: false

# ---------------------------------------------------------------------------- #

jobs:

  # -------------------------------------------------------------------------- #

  blackbox-test-amd64:
    executor: machine
    working_directory: /home/circleci/project
    steps:
      - checkout
      - run: docker system prune -f
      - run: docker pull docker.io/jancajthaml/bbtest:amd64
      - run: docker-compose build postgres
      - run:
          name: Run blackbox tests
          command: |
            docker-compose up -d bbtest-amd64
            docker exec -t $(docker-compose ps -q bbtest-amd64) python3 /opt/app/bbtest/main.py
            docker-compose down -v
          no_output_timeout: 5m
      - store_test_results:
          path: /home/circleci/project/reports/blackbox-tests/junit
      - store_artifacts:
          path: /home/circleci/project/reports/blackbox-tests
          destination: reports

  # -------------------------------------------------------------------------- #

  performance-test:
    executor: machine
    working_directory: /home/circleci/project
    steps:
      - checkout
      - run: docker system prune -f
      - run: docker pull docker.io/jancajthaml/bbtest:amd64
      - run:
          name: Run performance tests
          command: |
            docker-compose up -d perf
            docker exec -t $(docker-compose ps -q perf) python3 /opt/app/perf/main.py
            docker-compose down -v
          no_output_timeout: 2h
      - store_artifacts:
          path: /home/circleci/project/reports/perf-tests
          destination: reports
      - persist_to_workspace:
          root: /home/circleci/project/reports/perf-tests
          paths:
            - metrics

  # -------------------------------------------------------------------------- #

  report:
    executor: machine
    working_directory: /home/circleci/project
    steps:
      - attach_workspace:
          at: /home/circleci/project
      - run:
          name: Regenerate reports
          command: |
            if [ ! -d /home/circleci/project/metrics ] ; then
              (>&2 echo "no metrics to generate report from")
              exit 1
            fi

            git config --global user.email "jan.cajthaml@gmail.com"
            git config --global user.name "CircleCI e2e rolling update"

            echo yes | git clone git@github.com:jancajthaml-openbank/health-check.git

            if [ "$(ls -A health-check/reports)" ] ; then
              rm -rf health-check/reports/*
            fi

            cp -v /home/circleci/project/metrics/* health-check/reports/

            cd health-check

            pyenv global 3.6.5

            pip3 install --user -r requirements.txt

            find . -type f -name \*.svg -exec rm '{}' \;
            find . -type f -name \*.png -exec rm '{}' \;

            python3 generate_metrics_report.py

            git checkout --orphan rolling

            git add -A
            git commit -am "auto-commit cicleCI ${CIRCLE_STAGE}"
            git push -f origin rolling
            git branch -D main
            git branch -m main
            git push -f origin main
            git push origin --delete rolling

# ---------------------------------------------------------------------------- #
