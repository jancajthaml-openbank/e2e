version: 2.1

# ---------------------------------------------------------------------------- #

workflows:

  version: 2

  commit:
    jobs:
      - performance
      - blackbox-test-amd64
      - report:
          requires:
            - performance

  rolling_contract:
    triggers:
      - schedule:
          cron: "10,50 * * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - blackbox-test-amd64

  rolling_performance:
    triggers:
      - schedule:
          cron: "30 * * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - performance
      - report:
          requires:
            - performance

# ---------------------------------------------------------------------------- #

executors:

  machine:
    machine:
      image: circleci/classic:201808-01
      docker_layer_caching: false

# ---------------------------------------------------------------------------- #

jobs:

  # -------------------------------------------------------------------------- #

  blackbox-test-amd64:
    executor: machine
    working_directory: /home/circleci/project
    steps:
      - checkout
      - run: docker pull docker.io/jancajthaml/bbtest:amd64
      - run:
          name: Run blackbox tests
          command: |
            docker-compose up -d bbtest-amd64
            docker exec -t $(docker-compose ps -q bbtest-amd64) python3 /opt/app/bbtest/main.py
            docker-compose down -v
          no_output_timeout: 5m
      - store_test_results:
          path: /home/circleci/project/reports/blackbox-tests/junit
      - store_artifacts:
          path: /home/circleci/project/reports/blackbox-tests
          destination: reports

  # -------------------------------------------------------------------------- #

  performance:
    executor: machine
    environment:
      - LANG: C.UTF-8
    working_directory: /home/circleci/project
    steps:
      - checkout
      - run: docker pull jancajthaml/bbtest:amd64
      - run:
          name: Run performance tests
          command: |
            docker exec -it $(\
              docker run \
                -d \
                -t \
                -e CI=1 \
                -e GITHUB_RELEASE_TOKEN="${GITHUB_RELEASE_TOKEN}" \
                -v /sys/fs/cgroup:/sys/fs/cgroup:ro \
                -v /var/run/docker.sock:/var/run/docker.sock \
                -v /var/lib/docker/containers:/var/lib/docker/containers \
                -v /home/circleci/project/perf:/opt/perf \
                -v /home/circleci/project/reports:/reports \
              jancajthaml/bbtest:amd64 \
            ) python3 /opt/perf/main.py
          no_output_timeout: 3h
      - store_artifacts:
          path: /home/circleci/project/reports
          destination: reports
      - persist_to_workspace:
          root: /home/circleci/project
          paths:
            - reports

  # -------------------------------------------------------------------------- #

  report:
    executor: machine
    environment:
      - METRICS_PATH: /home/circleci/project/reports/perf_metrics
    working_directory: /home/circleci/project
    steps:
      - attach_workspace:
          at: /home/circleci/project
      - run:
          name: Regenerate reports
          command: |
            if [ ! -d ${METRICS_PATH} ] ; then
              exit 1
            fi

            git config --global user.email "jan.cajthaml@gmail.com"
            git config --global user.name "CircleCI e2e rolling update"

            echo yes | git clone git@github.com:jancajthaml-openbank/health-check.git

            if [ "$(ls -A health-check/reports)" ] ; then
              rm -rf health-check/reports/*
            fi

            cp -v ${METRICS_PATH}/* health-check/reports/
            cd health-check

            pyenv global 3.6.5

            pip3 install --user -r requirements.txt

            find . -type f -name \*.svg -exec rm '{}' \;
            find . -type f -name \*.png -exec rm '{}' \;

            python3 generate_metrics_report.py

            git checkout --orphan rolling

            git add -A
            git commit -am "auto-commit performance result update"
            git push -f origin rolling
            git branch -D master
            git branch -m master
            git push -f origin master
            git push origin --delete rolling

# ---------------------------------------------------------------------------- #
