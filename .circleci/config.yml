version: 2

# ---------------------------------------------------------------------------- #

workflows:

  version: 2

  commit:
    jobs:
      - performance
      - bbtest
      - report:
          requires:
            - performance

  rolling_contract:
    triggers:
      - schedule:
          cron: "0,5,10,15,20,25,30,35,40,45,50,55 * * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - bbtest

  rolling_performance:
    triggers:
      - schedule:
          cron: "0,15,30,45 * * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - performance
      - report:
          requires:
            - performance

# ---------------------------------------------------------------------------- #

jobs:

  # -------------------------------------------------------------------------- #

  report:

    machine: true

    environment:
      - METRICS_PATH: /home/circleci/project/reports/metrics

    working_directory: /home/circleci/project

    steps:

      - attach_workspace:
          at: /home/circleci/project/reports

      - run:
          name: Regenerate reports
          command: |
            if [ ! -d ${METRICS_PATH} ] ; then
              exit 1
            fi

            ls -1 ${METRICS_PATH}

            git config --global user.email "jan.cajthaml@gmail.com"
            git config --global user.name "CircleCI e2e rolling update"

            git clone git@github.com:jancajthaml-openbank/health-check.git

            if [ "$(ls -A health-check/reports)" ] ; then
              rm -rf health-check/reports/*
            fi

            cp -v ${METRICS_PATH}/all* health-check/reports/
            ls -1 health-check/reports/

            cd health-check
            python generate_metrics_report.py > README.md

            git checkout --orphan rolling

            git add -A
            git commit -am "circleci e2e rolling update of reports"
            git push -f origin rolling
            git branch -D master
            git branch -m master
            git push -f origin master
            git push origin --delete rolling

  # -------------------------------------------------------------------------- #

  performance:

    machine: true

    environment:
      - LOGS_PATH: /home/circleci/project/logs
      - METRICS_PATH: /home/circleci/project/metrics
      - TENANT: performance
      - MAX_PARALLELISM: 10

    working_directory: /home/circleci/project

    steps:

      - checkout

      - run:
          name: Fetch images for performance tests
          command: |
            pull() {
              echo "pulling ${1}:${2}"
              docker pull ${1}:${2}
            }

            pull openbank/vault master &
            pull openbank/lake master &
            pull openbank/wall master &
            pull openbank/search master &
            wait

            cd perf && docker build -t e2e_perf .

      - run: mkdir -p ${LOGS_PATH} ${METRICS_PATH}

      - run: docker network create e2e_bridge

      - run:
          name: Run performance tests
          command: |
            docker run \
              -t \
              -e LOG_LEVEL=ERROR \
              -e VERSION=master \
              -v /var/run/docker.sock:/var/run/docker.sock \
              -v ${LOGS_PATH}:/logs \
              -v ${METRICS_PATH}:/opt/metrics \
              --net=e2e_bridge \
              e2e_perf

      - run: (docker rm -f $(docker ps -aq) 2> /dev/null || :) &> /dev/null

      - run: docker network rm e2e_bridge

      - store_artifacts:
          path: /home/circleci/project/metrics
          destination: metrics

      - store_artifacts:
          path: /home/circleci/project/logs
          destination: logs

      - persist_to_workspace:
          root: .
          paths:
            - metrics
            - logs

  # -------------------------------------------------------------------------- #

  bbtest:

    machine: true

    working_directory: /home/circleci/project

    steps:

      - checkout

      - run:
          name: Prepare blackbox tests
          command: |
            pull() {
              echo "pulling ${1}:${2}"
              docker pull ${1}:${2}
            }

            pull openbank/vault master &
            pull openbank/lake master &
            pull openbank/wall master &
            pull openbank/search master &
            pull mongo latest &
            wait

            (docker rm -f $(docker-compose ps -q) 2> /dev/null || :) &> /dev/null

            docker-compose build bbtest

      - run:
          name: Run blackbox tests
          command: |
            mkdir -p /tmp
            VERSION=master \
            \
            docker-compose run --rm bbtest

      - run : if [ ! -d reports ] ; then exit 1 ; fi

      - store_test_results:
          path: /home/circleci/project/bbtest

      - store_artifacts:
          path: /home/circleci/project/reports
          destination: reports

      - persist_to_workspace:
          root: .
          paths:
            - reports

      - run: (docker rm -f $(docker-compose ps -q) 2> /dev/null || :) &> /dev/null

      - run: (docker rm -f $(docker ps -aqf "name=bbtest") || :) &> /dev/null

# ---------------------------------------------------------------------------- #
